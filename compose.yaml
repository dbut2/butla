services:
  tunnel:
    container_name: tunnel
    image: cloudflare/cloudflared:latest
    networks:
      - ingress
    restart: always
    command:
      - tunnel
      - run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}

  traefik:
    container_name: traefik
    image: traefik:v2.5
    ports:
      - "443:8443"
    command:
      - "--providers.docker=true"
      - "--providers.file.filename=/etc/traefik/traefik_dynamic.yaml"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.local.address=:8443"
      - "--entrypoints.traefik.address=:8080"
      - "--api.dashboard=true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" # So that Traefik can listen to the Docker events
      - "/root/ghq/github.com/dbutlabs/home/traefik_dynamic.yaml:/etc/traefik/traefik_dynamic.yaml"
      - "/etc/letsencrypt/live:/certs/live"
      - "/etc/letsencrypt/archive:/certs/archive"
    networks:
      - ingress
      - web
    labels:
      - "traefik.docker.network=web"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.dbut.dev`)"
      - "traefik.http.routers.dashboard.service=api@internal"
    restart: always

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    networks:
      - web
    labels:
      - "traefik.docker.network=web"
      - "traefik.http.routers.uptime-kuma.entrypoints=web"
      - "traefik.http.routers.uptime-kuma.rule=Host(`status.dbut.dev`)"
    volumes:
      - $HOME/ghq/ssh.dbut.dev/dbut/home/uptime-kuma-data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  ghost:
    image: ghost:5-alpine
    restart: always
    networks:
      - web
      - ghost
      - db
    labels:
      - "traefik.docker.network=web"
      - "traefik.http.routers.ghost.entrypoints=web"
      - "traefik.http.routers.ghost.rule=Host(`dylanbutler.dev`)"
      - "traefik.http.middlewares.ghost-headers.headers.customrequestheaders.X-Forwarded-Host=dylanbutler.dev"
      - "traefik.http.middlewares.ghost-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.ghost.middlewares=ghost-headers"
    environment:
      url: https://dylanbutler.dev
      database__client: mysql
      database__connection__host: db
      database__connection__user: root
      database__connection__password: password
      database__connection__database: ghost
      mail__transport: SMTP
      mail__options__from: dylan@but.la
      mail__options__service: SMTP
      mail__options__host: smtp.mail.me.com
      mail__options__port: 587
      mail__options__secure: false
      mail__options__auth__user: ${APPLE_EMAIL_USERNAME}
      mail__options__auth__pass: ${APPLE_EMAIL_PASSWORD}
    volumes:
      - /root/ghq/ssh.dbut.dev/dbut/home/ghost/ghost:/var/lib/ghost/content

  db:
    image: mysql:8.0
    restart: always
    networks:
      - ghost
      - db
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - $HOME/ghq/ssh.dbut.dev/dbut/home/ghost/db:/var/lib/mysql

  portainer:
    image: portainer/portainer-ce:alpine
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    networks:
      - web
    labels:
      - "traefik.docker.network=web"
      - "traefik.http.routers.portainer.entrypoints=local"
      - "traefik.http.routers.portainer.rule=Host(`portainer.dbut.dev`)"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "$HOME/ghq/ssh.dbut.dev/dbut/home/portainer:/data"
    restart: always

  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    labels:
      - "traefik.docker.network=web"
      - "traefik.http.routers.jellyfin.entrypoints=web"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.dbut.dev`)"
      - "traefik.http.routers.jellyfins.entrypoints=local"
      - "traefik.http.routers.jellyfins.rule=Host(`jellyfin.dbut.dev`)"
      - "traefik.http.routers.jellyfins.tls=true"
    networks:
      - web
    volumes:
      - /root/ghq/ssh.dbut.dev/dbut/home/config:/config
      - /root/ghq/ssh.dbut.dev/dbut/home/cache:/cache
      - /media:/media
      - /mnt/windows/Movies:/media/windows
      - /mnt/windows/Shows:/media/shows
    restart: unless-stopped
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    labels:
      - "traefik.docker.network=web"
      - "traefik.http.routers.transmission.entrypoints=local"
      - "traefik.http.routers.transmission.rule=Host(`transmission.dbut.dev`)"
      - "traefik.http.routers.transmission.tls=true"
    networks:
      - web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Melbourne
    volumes:
      - /mnt/windows/Movies:/media/movies
      - /mnt/windows/Shows:/media/shows
      - /mnt/nvme1/transmission:/downloads
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  speedtest:
    restart: unless-stopped
    container_name: openspeedtest
    labels:
      - "traefik.docker.network=web"
      - "traefik.http.routers.speedtest.entrypoints=web"
      - "traefik.http.routers.speedtest.rule=Host(`speedtest.dbut.dev`)"
    networks:
      - web
    image: openspeedtest/latest

  shlink:
    image: shlinkio/shlink:stable
    container_name: shlink
    environment:
      DEFAULT_DOMAIN: "but.la"
      DEFAULT_BASE_URL_REDIRECT: "https://dylanbutler.dev"
      DEFAULT_SHORT_CODES_LENGTH: 4
      REDIRECT_APPEND_EXTRA_PATH: true
      IS_HTTPS_ENABLED: true
      #      GEOLITE_LICENSE_KEY: your_geolite_license_key  # Replace with your actual GeoLite license key
      DB_DRIVER: mysql
      DB_NAME: shlink_db     # Name of the database to be used by Shlink
      DB_USER: root          # Since you use root for other services, or you can use another user
      DB_PASSWORD: password  # Password for the database
      DB_HOST: db            # Using the existing db service
    labels:
      - "traefik.docker.network=web"
      - "traefik.http.routers.shlink.entrypoints=web"
      - "traefik.http.routers.shlink.rule=Host(`but.la`, `dbut.dev`)"
    networks:
      - web
      - db
    depends_on:
      - db
    restart: always

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    labels:
      - "traefik.docker.network=web"
      - "traefik.http.routers.pihole.entrypoints=local"
      - "traefik.http.routers.pihole.rule=Host(`pihole.dbut.dev`)"
      - "traefik.http.routers.pihole.tls=true"
      - "traefik.http.routers.ph.entrypoints=web"
      - "traefik.http.routers.ph.rule=Host(`pihole.dbut.dev`)"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
    networks:
      - web
    environment:
      TZ: 'Australia/Melbourne'
    volumes:
      - '/root/ghq/ssh.dbut.dev/dbut/home/pihole/etc-pihole:/etc/pihole'
      - '/root/ghq/ssh.dbut.dev/dbut/home/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    restart: unless-stopped

  home:
    build:
      context: home
      dockerfile: Dockerfile
    networks:
      - web
      - ingress
    labels:
      - "traefik.docker.network=web"
      - "traefik.http.routers.home.entrypoints=web"
      - "traefik.http.routers.home.rule=Host(`home.dbut.dev`)"
      - "traefik.http.routers.homes.entrypoints=local"
      - "traefik.http.routers.homes.rule=Host(`home.dbut.dev`)"
      - "traefik.http.routers.homes.tls=true"

networks:
  ingress:
    driver: bridge
  web:
    external: true
  swarm-web:
    external: true
  ghost:
    driver: bridge
  db:
    driver: bridge
