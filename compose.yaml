x-service-defaults: &service-defaults
  restart: always
  networks: &default-networks
    web:
  labels: &default-labels
    traefik.enable: "true"
    traefik.docker.network: "web"
  environment: &default-environment
    TZ: "Australia/Melbourne"

services:
  tunnel:
    container_name: tunnel
    image: cloudflare/cloudflared:latest
    networks:
      - ingress
    restart: always
    command:
      - tunnel
      - run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}

  traefik:
    container_name: traefik
    image: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:443"
      - "--entrypoints.web.http.tls.certresolver=r"
      - "--entrypoints.web.http.tls.domains[0].main=dbut.dev"
      - "--entrypoints.web.http.tls.domains[0].sans=*.dbut.dev,dylanbutler.dev,*.dylanbutler.dev,but.la,*.but.la,dbut.tw"
      - "--entrypoints.web.http.tls.domains[1].main=billiesmacoadventure.com"
      - "--entrypoints.web.http.tls.domains[1].sans=*.billiesmacoadventure.com"
      - "--entrypoints.local.address=:8443"
      - "--entrypoints.local.http.tls.certresolver=r"
      - "--entrypoints.local.http.tls.domains[0].main=dbut.dev"
      - "--entrypoints.local.http.tls.domains[0].sans=*.dbut.dev,dylanbutler.dev,*.dylanbutler.dev,but.la,*.but.la"
      - "--entrypoints.traefik.address=:8080"
      - "--api.dashboard=true"
      - "--certificatesresolvers.r.acme.email=dylan@but.la"
      - "--certificatesresolvers.r.acme.dnschallenge=true"
      - "--certificatesresolvers.r.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.r.acme.dnschallenge.delayBeforeCheck=0"
      - "--certificatesresolvers.r.acme.storage=/acme/acme.json"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "traefik-acme:/acme"
    networks:
      - ingress
      - web
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.dashboard.entrypoints=local"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.dbut.dev`)"
      - "traefik.http.routers.dashboard.service=api@internal"
    restart: always
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_API_EMAIL}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_TOKEN}

  uptime-kuma:
    <<: *service-defaults
    image: louislam/uptime-kuma
    container_name: uptime-kuma
    labels:
      <<: *default-labels
      traefik.http.routers.uptime-kuma.entrypoints: "web"
      traefik.http.routers.uptime-kuma.rule: "Host(`status.dbut.dev`)"
    volumes:
      - /root/ghq/ssh.dbut.dev/dbut/home/uptime-kuma-data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock

  ghost:
    <<: *service-defaults
    image: ghost:5-alpine
    networks:
      <<: *default-networks
      db:
    labels:
      <<: *default-labels
      traefik.http.routers.ghost.entrypoints: "web"
      traefik.http.routers.ghost.rule: "Host(`dylanbutler.dev`)"
      traefik.http.middlewares.ghost-headers.headers.customrequestheaders.X-Forwarded-Host: "dylanbutler.dev"
      traefik.http.middlewares.ghost-headers.headers.customrequestheaders.X-Forwarded-Proto: "https"
      traefik.http.routers.ghost.middlewares: "ghost-headers"
    environment:
      <<: *default-environment
      url: https://dylanbutler.dev
      database__client: mysql
      database__connection__host: db
      database__connection__user: root
      database__connection__password: password
      database__connection__database: ghost
      mail__transport: SMTP
      mail__options__from: dylan@but.la
      mail__options__service: SMTP
      mail__options__host: smtp.mail.me.com
      mail__options__port: 587
      mail__options__secure: false
      mail__options__auth__user: ${APPLE_EMAIL_USERNAME}
      mail__options__auth__pass: ${APPLE_EMAIL_PASSWORD}
    volumes:
      - /root/ghq/ssh.dbut.dev/dbut/home/ghost/ghost:/var/lib/ghost/content

  db:
    image: mysql:8.0
    restart: always
    networks:
      - db
    environment:
      MYSQL_ROOT_PASSWORD: password
    volumes:
      - /root/ghq/ssh.dbut.dev/dbut/home/ghost/db:/var/lib/mysql

  portainer:
    <<: *service-defaults
    image: portainer/portainer-ce:alpine
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    labels:
      <<: *default-labels
      traefik.http.routers.portainer.entrypoints: "web"
      traefik.http.routers.portainer.rule: "Host(`portainer.dbut.dev`)"
      traefik.http.services.portainer.loadbalancer.server.port: "9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/root/ghq/ssh.dbut.dev/dbut/home/portainer:/data"

  jellyfin:
    <<: *service-defaults
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    labels:
      <<: *default-labels
      traefik.http.routers.jellyfin.entrypoints: "web,local"
      traefik.http.routers.jellyfin.rule: "Host(`jellyfin.dbut.dev`)"
    volumes:
      - /root/ghq/ssh.dbut.dev/dbut/home/config:/config
      - /root/ghq/ssh.dbut.dev/dbut/home/cache:/cache
      - /media:/media
      - /mnt/windows/Movies:/media/windows
      - /mnt/windows/Shows:/media/shows
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  transmission:
    <<: *service-defaults
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    labels:
      <<: *default-labels
      traefik.http.routers.transmission.entrypoints: "local"
      traefik.http.routers.transmission.rule: "Host(`transmission.dbut.dev`)"
    environment:
      <<: *default-labels
      PUID: "1000"
      PGID: "1000"
    volumes:
      - /mnt/windows/Movies:/media/movies
      - /mnt/windows/Shows:/media/shows
      - /mnt/nvme1/transmission:/downloads

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    environment:
      TZ: "Australia/Melbourne"
      WATCHTOWER_SCHEDULE: "* */10 * * * *"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  speedtest:
    <<: *service-defaults
    image: openspeedtest/latest
    container_name: openspeedtest
    labels:
      <<: *default-labels
      traefik.http.routers.speedtest.entrypoints: "web,local"
      traefik.http.routers.speedtest.rule: "Host(`speedtest.dbut.dev`)"

  shlink:
    <<: *service-defaults
    image: shlinkio/shlink:stable
    container_name: shlink
    environment:
      <<: *default-environment
      DEFAULT_DOMAIN: but.la
      DEFAULT_SHORT_CODES_LENGTH: 4
      REDIRECT_APPEND_EXTRA_PATH: true
      IS_HTTPS_ENABLED: true
      DB_DRIVER: mysql
      DB_NAME: shlink_db
      DB_USER: root
      DB_PASSWORD: password
      DB_HOST: db
    labels:
      <<: *default-labels
      traefik.http.routers.shlink.entrypoints: "web"
#      traefik.http.routers.shlink.rule: "Host(`but.la`) || Host(`dbut.dev`) || Host(`listen.dbut.dev`) || Host(`listen.dylanbutler.dev`) || Host(`bailey.but.la`) || Host(`dylan.but.la`)"
    networks:
      <<: *default-networks
      db:
    depends_on:
      - db

  butla:
    <<: *service-defaults
    build:
      context: butla
      dockerfile: Dockerfile
    labels:
      <<: *default-labels
      traefik.http.routers.butla.entrypoints: "web"
      traefik.http.routers.butla.rule: "Host(`but.la`) || Host(`dbut.dev`) || Host(`listen.dbut.dev`) || Host(`listen.dylanbutler.dev`) || Host(`bailey.but.la`) || Host(`dylan.but.la`) || Host(`dbut.tw` || Host(`dylan.md`)"

  pihole:
    <<: *service-defaults
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    labels:
      <<: *default-labels
      traefik.http.routers.pihole.entrypoints: "local"
      traefik.http.routers.pihole.rule: "Host(`pihole.dbut.dev`)"
      traefik.http.services.pihole.loadbalancer.server.port: "80"
    volumes:
      - '/root/ghq/ssh.dbut.dev/dbut/home/pihole/etc-pihole:/etc/pihole'
      - '/root/ghq/ssh.dbut.dev/dbut/home/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'

  ntfy:
    <<: *service-defaults
    image: binwiederhier/ntfy
    container_name: ntfy
    command:
      - serve
    volumes:
      - /root/ghq/ssh.dbut.dev/dbut/home/ntfy/var/cache/ntfy:/var/cache/ntfy
      - /root/ghq/ssh.dbut.dev/dbut/home/ntfy/etc/ntfy:/etc/ntfy
    labels:
      <<: *default-labels
      traefik.http.routers.ntfy.entrypoints: web
      traefik.http.routers.ntfy.rule: "Host(`ntfy.dbut.dev`)"
    healthcheck: # optional: remember to adapt the host:port to your environment
      test: [ "CMD-SHELL", "wget -q --tries=1 http://localhost:80/v1/health -O - | grep -Eo '\"healthy\"\\s*:\\s*true' || exit 1" ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  ddns:
    container_name: ddns
    image: oznu/cloudflare-ddns
    environment:
      API_KEY: ${CLOUDFLARE_DDNS_API_TOKEN}
      ZONE: dbut.dev
      SUBDOMAIN: home

  amihome:
    <<: *service-defaults
    build:
      context: amihome
      dockerfile: Dockerfile
    networks:
      <<: *default-networks
      ingress:
    labels:
      <<: *default-labels
      traefik.http.routers.home.entrypoints: "web,local"
      traefik.http.routers.home.rule: "Host(`amihome.dbut.dev`)"


volumes:
  traefik-acme:

networks:
  ingress:
    driver: bridge
  web:
    external: true
  db:
    driver: bridge
